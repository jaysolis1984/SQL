-- For this project, I downloaded Spotify data from Kaggle.
-- Then I created a table to insert Spotify data into.
-- Finally, I performed analytics on the data using SQL. 

-- Creating the table: 
CREATE TABLE BIT_DB.Spotifydata (
id integer PRIMARY KEY,
artist_name varchar NOT NULL,
track_name varchar NOT NULL,
track_id varchar NOT NULL,
popularity integer NOT NULL,
danceability decimal(4,3) NOT NULL,
energy decimal(4,3) NOT NULL,
key integer NOT NULL,
loudness decimal(5,3) NOT NULL,
mode integer NOT NULL,
speechiness decimal(5,4) NOT NULL,
acousticness decimal(6,5) NOT NULL,
instrumentalness text NOT NULL,
liveness decimal(5,4) NOT NULL,
valence decimal(4,3) NOT NULL,
tempo decimal(6,3) NOT NULL,
duration_ms integer NOT NULL,
time_signature integer NOT NULL 
)

-- Then I inserted the Spotify Data .csv into the table.

-- Next, I explored the data using the following SQL. 

-- Avg popularity, danceability, and energy by artist and track. 
SELECT artist_name,track_name,avg(popularity),avg(danceability),avg(energy)
FROM BIT_DB.spotifydata
GROUP BY artist_name, track_name;

-- Top 10 artists by popularity
SELECT track_name, artist_name, popularity
FROM BIT_DB.spotifydata
ORDER BY popularity desc
LIMIT 10;

-- Number of times artist appears on the list
SELECT artist_name, count(artist_name) as appearances
FROM BIT_DB.Spotifydata
GROUP BY artist_name
ORDER BY appearances desc;

-- Your task is to calculate the average popularity for the artists in the table.
-- Then, for every artist with an average popularity of 90 or above, you need to show their name,
-- their average popularity, and label them as a “Top Star”. How would you do this using a CTE? 

WITH avgpop AS (
    SELECT s.artist_name, AVG(s.popularity) AS average_popularity
    FROM Spotifydata s
    GROUP BY s.artist_name
    )
    
SELECT artist_name, average_popularity, 'TOP STAR' AS tag
FROM avgpop
WHERE average_popularity >= 90
ORDER BY average_popularity desc;
